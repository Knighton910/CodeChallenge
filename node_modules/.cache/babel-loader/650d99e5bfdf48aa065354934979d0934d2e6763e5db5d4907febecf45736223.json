{"ast":null,"code":"var _jsxFileName = \"/Users/lordknighton/Desktop/practical-reactjs-coding-challenges/text-analyzer-tool/src/components/TextArea/index.tsx\",\n  _s = $RefreshSig$();\nimport './index.scss';\nimport React, { useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NEW_LINE_REGEX = /(\\r\\n|\\n|\\r)/g;\nconst TextArea = props => {\n  _s();\n  const {\n    showCount,\n    countLimit,\n    countDirection,\n    countPosition,\n    shouldTruncate,\n    initialValue,\n    rows,\n    resize,\n    className,\n    placeholder,\n    onCount,\n    onChange,\n    onFocus,\n    onBlur,\n    required,\n    disabled,\n    ...remainingProps\n  } = props;\n  const [value, setValue] = useState(shouldTruncate ? initialValue.slice(0, countLimit) : initialValue);\n  const handleChange = useCallback(event => {\n    let newValue = event.target.value.replace(NEW_LINE_REGEX, '\\n');\n    if (shouldTruncate) {\n      newValue = newValue.slice(0, countLimit);\n    }\n    event.target.value = newValue;\n    setValue(newValue);\n    onChange(event);\n  }, [countLimit, onChange, shouldTruncate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      \"data-testid\": \"textarea\",\n      style: {\n        width: '100%',\n        resize\n      },\n      value: value,\n      rows: rows,\n      placeholder: placeholder,\n      onChange: handleChange,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      required: required,\n      disabled: disabled,\n      ...remainingProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TextArea, \"W5tVp7vrhcTpFI9IBbvrH/5qmis=\");\n_c = TextArea;\nexport default TextArea;\nvar _c;\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"names":["React","useState","useCallback","NEW_LINE_REGEX","TextArea","props","showCount","countLimit","countDirection","countPosition","shouldTruncate","initialValue","rows","resize","className","placeholder","onCount","onChange","onFocus","onBlur","required","disabled","remainingProps","value","setValue","slice","handleChange","event","newValue","target","replace","width"],"sources":["/Users/lordknighton/Desktop/practical-reactjs-coding-challenges/text-analyzer-tool/src/components/TextArea/index.tsx"],"sourcesContent":["import './index.scss'\nimport React, {useState, useCallback} from 'react'\n\nconst NEW_LINE_REGEX = /(\\r\\n|\\n|\\r)/g;\n\nconst TextArea = (props: any) => {\n  const {\n    showCount,\n    countLimit,\n    countDirection,\n    countPosition,\n    shouldTruncate,\n    initialValue,\n    rows,\n    resize,\n    className,\n    placeholder,\n    onCount,\n    onChange,\n    onFocus,\n    onBlur,\n    required,\n    disabled,\n    ...remainingProps\n  } = props;\n\n  const [value, setValue] = useState(\n    shouldTruncate ? initialValue.slice(0, countLimit) : initialValue\n  );\n\n  const handleChange = useCallback(\n    (event:any) => {\n      let newValue = event.target.value.replace(NEW_LINE_REGEX, '\\n');\n\n      if (shouldTruncate) {\n        newValue = newValue.slice(0, countLimit);\n      }\n\n      event.target.value = newValue;\n\n      setValue(newValue);\n      onChange(event);\n    },\n    [countLimit, onChange, shouldTruncate]\n  );\n\n  return (\n    <div>\n      <textarea\n        data-testid=\"textarea\"\n        style={{ width: '100%', resize }}\n        value={value}\n        rows={rows}\n        placeholder={placeholder}\n        onChange={handleChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        required={required}\n        disabled={disabled}\n        {...remainingProps}\n      />\n    </div>\n  )\n}\n\nexport default TextArea\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,WAAW,QAAO,OAAO;AAAA;AAElD,MAAMC,cAAc,GAAG,eAAe;AAEtC,MAAMC,QAAQ,GAAIC,KAAU,IAAK;EAAA;EAC/B,MAAM;IACJC,SAAS;IACTC,UAAU;IACVC,cAAc;IACdC,aAAa;IACbC,cAAc;IACdC,YAAY;IACZC,IAAI;IACJC,MAAM;IACNC,SAAS;IACTC,WAAW;IACXC,OAAO;IACPC,QAAQ;IACRC,OAAO;IACPC,MAAM;IACNC,QAAQ;IACRC,QAAQ;IACR,GAAGC;EACL,CAAC,GAAGjB,KAAK;EAET,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAChCS,cAAc,GAAGC,YAAY,CAACc,KAAK,CAAC,CAAC,EAAElB,UAAU,CAAC,GAAGI,YAAY,CAClE;EAED,MAAMe,YAAY,GAAGxB,WAAW,CAC7ByB,KAAS,IAAK;IACb,IAAIC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACN,KAAK,CAACO,OAAO,CAAC3B,cAAc,EAAE,IAAI,CAAC;IAE/D,IAAIO,cAAc,EAAE;MAClBkB,QAAQ,GAAGA,QAAQ,CAACH,KAAK,CAAC,CAAC,EAAElB,UAAU,CAAC;IAC1C;IAEAoB,KAAK,CAACE,MAAM,CAACN,KAAK,GAAGK,QAAQ;IAE7BJ,QAAQ,CAACI,QAAQ,CAAC;IAClBX,QAAQ,CAACU,KAAK,CAAC;EACjB,CAAC,EACD,CAACpB,UAAU,EAAEU,QAAQ,EAAEP,cAAc,CAAC,CACvC;EAED,oBACE;IAAA,uBACE;MACE,eAAY,UAAU;MACtB,KAAK,EAAE;QAAEqB,KAAK,EAAE,MAAM;QAAElB;MAAO,CAAE;MACjC,KAAK,EAAEU,KAAM;MACb,IAAI,EAAEX,IAAK;MACX,WAAW,EAAEG,WAAY;MACzB,QAAQ,EAAEW,YAAa;MACvB,OAAO,EAAER,OAAQ;MACjB,MAAM,EAAEC,MAAO;MACf,QAAQ,EAAEC,QAAS;MACnB,QAAQ,EAAEC,QAAS;MAAA,GACfC;IAAc;MAAA;MAAA;MAAA;IAAA;EAClB;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,GA1DKlB,QAAQ;AAAA,KAARA,QAAQ;AA4Dd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}